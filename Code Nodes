try {
  // รับข้อมูลจาก input
  const input = $input.first().json;
  
  // ตรวจสอบ format ข้อมูลที่ได้รับ
  console.log('📡 Full input data:', JSON.stringify(input, null, 2));
  
  // รับค่าจาก message field (ที่ MQTT ส่งมา)
  const rawValue = input.message || input.payload || input.value || 0;
  const topic = input.topic || 'data/qwCOowlTnOYNSLVmZVMW/1'; // default เป็นอุณหภูมิ
  const timestamp = new Date().toLocaleString('th-TH');
  
  console.log('📊 Raw value from MQTT:', rawValue);
  console.log('📡 Topic:', topic);
  
  // แปลงค่าเป็นตัวเลข
  let value = 0;
  if (rawValue !== null && rawValue !== undefined && rawValue !== '') {
    const parsedValue = parseFloat(rawValue);
    if (!isNaN(parsedValue)) {
      value = parsedValue;
      console.log('✅ Parsed value:', value);
    } else {
      console.log('⚠️ Cannot parse to number:', rawValue);
    }
  }
  
  // แยกประเภท sensor จาก topic หรือคาดเดาจากค่า
  const topicParts = topic.split('/');
  const deviceKey = topicParts[1] || 'qwCOowlTnOYNSLVmZVMW';
  let slot = topicParts[2] || '1'; // default เป็น slot 1 (อุณหภูมิ)
  
  // ถ้าไม่มี topic ให้เดาจากช่วงค่า
  if (!input.topic) {
    if (value >= 0 && value <= 50) {
      slot = '1'; // น่าจะเป็นอุณหภูมิ
      console.log('🔍 ไม่มี topic, เดาว่าเป็นอุณหภูมิ (0-50°C)');
    } else if (value > 50 && value <= 100) {
      slot = '2'; // น่าจะเป็นความชื้น
      console.log('🔍 ไม่มี topic, เดาว่าเป็นความชื้น (50-100%)');
    }
  }
  
  let sensorName = 'Unknown Sensor';
  let sensorType = 'unknown';
  let unit = '';
  let icon = '📊';
  let assessment = 'ไม่ทราบ';
  
  // กำหนดข้อมูล sensor ตาม slot
  switch(slot) {
    case '1':
      sensorName = 'อุณหภูมิ';
      sensorType = 'temperature';
      unit = '°C';
      icon = '🌡️';
      if (value < 16) assessment = 'เย็นมาก';
      else if (value < 20) assessment = 'เย็น';
      else if (value < 25) assessment = 'สบาย';
      else if (value < 30) assessment = 'อบอุ่น';
      else if (value < 35) assessment = 'ร้อน';
      else assessment = 'ร้อนมาก';
      break;
      
    case '2':
      sensorName = 'ความชื้น';
      sensorType = 'humidity';
      unit = '%';
      icon = '💧';
      if (value < 30) assessment = 'แห้งมาก';
      else if (value < 40) assessment = 'แห้ง';
      else if (value < 60) assessment = 'เหมาะสม';
      else if (value < 80) assessment = 'ชื้น';
      else assessment = 'ชื้นมาก';
      break;
      
    default:
      sensorName = `Sensor ช่อง ${slot}`;
      sensorType = 'unknown';
  }
  
  // แสดงผลใน console
  console.log(`${icon} ประมวลผล: ${sensorName}`);
  console.log(`📊 ค่า: ${value}${unit} (${assessment})`);
  console.log(`📡 Device: ${deviceKey}`);
  console.log(`🕐 เวลา: ${timestamp}`);
  
  // สร้างข้อความสำหรับ AI
  const message = `${icon} ได้รับข้อมูล${sensorName}ใหม่!

📊 รายละเอียด:
- ${sensorName}: ${value}${unit}
- ประเมินเบื้องต้น: ${assessment}
- เวลา: ${timestamp}
- อุปกรณ์: ${deviceKey}

โปรดวิเคราะห์ข้อมูล${sensorName} ${value}${unit} และให้ความเห็น:
1. ค่านี้เป็นอย่างไร (ปกติ/สูง/ต่ำ)
2. เหมาะสมสำหรับสภาพแวดล้อมหรือไม่
3. คำแนะนำหรือข้อควรระวัง
4. ผลกระทบต่อสุขภาพ

ตอบเป็นภาษาไทยแบบกระชับ`;

  // ส่งข้อมูลไป AI Agent
  return [{
    json: {
      message: message,
      sensor_data: {
        name: sensorName,
        type: sensorType,
        value: value, // ค่าที่แปลงแล้ว
        unit: unit,
        icon: icon,
        slot: slot,
        assessment: assessment,
        timestamp: timestamp,
        topic: topic,
        device_key: deviceKey
      },
      debug_info: {
        raw_input: input,
        raw_value: rawValue,
        parsed_value: value,
        topic_detected: topic,
        slot_detected: slot
      },
      processing_info: {
        success: true,
        processed_at: new Date().toISOString()
      }
    }
  }];
  
} catch (error) {
  console.log('❌ Error in Code node:', error.message);
  
  return [{
    json: {
      message: "เกิดข้อผิดพลาดในการประมวลผลข้อมูล",
      sensor_data: {
        name: "Error",
        type: "error",
        value: 0,
        unit: "",
        icon: "❌",
        slot: "0",
        assessment: "ข้อผิดพลาด",
        timestamp: new Date().toLocaleString('th-TH'),
        topic: "error",
        device_key: "unknown"
      },
      error_info: {
        error_message: error.message,
        input_received: $input.first().json
      }
    }
  }];
}
